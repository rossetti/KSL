/*
 * This file is generated by jOOQ.
 */
package ksl.utilities.io.dbutil.ksldbjooq.tables.records


import ksl.utilities.io.dbutil.ksldbjooq.tables.BatchStatView

import org.jooq.Field
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BatchStatViewRecord() : TableRecordImpl<BatchStatViewRecord>(BatchStatView.BATCH_STAT_VIEW), Record7<String?, String?, Int?, String?, Double?, Double?, Double?> {

    open var expName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var runName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var repId: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var statName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var statCount: Double?
        set(value): Unit = set(4, value)
        get(): Double? = get(4) as Double?

    open var average: Double?
        set(value): Unit = set(5, value)
        get(): Double? = get(5) as Double?

    open var stdDev: Double?
        set(value): Unit = set(6, value)
        get(): Double? = get(6) as Double?

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<String?, String?, Int?, String?, Double?, Double?, Double?> = super.fieldsRow() as Row7<String?, String?, Int?, String?, Double?, Double?, Double?>
    override fun valuesRow(): Row7<String?, String?, Int?, String?, Double?, Double?, Double?> = super.valuesRow() as Row7<String?, String?, Int?, String?, Double?, Double?, Double?>
    override fun field1(): Field<String?> = BatchStatView.BATCH_STAT_VIEW.EXP_NAME
    override fun field2(): Field<String?> = BatchStatView.BATCH_STAT_VIEW.RUN_NAME
    override fun field3(): Field<Int?> = BatchStatView.BATCH_STAT_VIEW.REP_ID
    override fun field4(): Field<String?> = BatchStatView.BATCH_STAT_VIEW.STAT_NAME
    override fun field5(): Field<Double?> = BatchStatView.BATCH_STAT_VIEW.STAT_COUNT
    override fun field6(): Field<Double?> = BatchStatView.BATCH_STAT_VIEW.AVERAGE
    override fun field7(): Field<Double?> = BatchStatView.BATCH_STAT_VIEW.STD_DEV
    override fun component1(): String? = expName
    override fun component2(): String? = runName
    override fun component3(): Int? = repId
    override fun component4(): String? = statName
    override fun component5(): Double? = statCount
    override fun component6(): Double? = average
    override fun component7(): Double? = stdDev
    override fun value1(): String? = expName
    override fun value2(): String? = runName
    override fun value3(): Int? = repId
    override fun value4(): String? = statName
    override fun value5(): Double? = statCount
    override fun value6(): Double? = average
    override fun value7(): Double? = stdDev

    override fun value1(value: String?): BatchStatViewRecord {
        this.expName = value
        return this
    }

    override fun value2(value: String?): BatchStatViewRecord {
        this.runName = value
        return this
    }

    override fun value3(value: Int?): BatchStatViewRecord {
        this.repId = value
        return this
    }

    override fun value4(value: String?): BatchStatViewRecord {
        this.statName = value
        return this
    }

    override fun value5(value: Double?): BatchStatViewRecord {
        this.statCount = value
        return this
    }

    override fun value6(value: Double?): BatchStatViewRecord {
        this.average = value
        return this
    }

    override fun value7(value: Double?): BatchStatViewRecord {
        this.stdDev = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Int?, value4: String?, value5: Double?, value6: Double?, value7: Double?): BatchStatViewRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised BatchStatViewRecord
     */
    constructor(expName: String? = null, runName: String? = null, repId: Int? = null, statName: String? = null, statCount: Double? = null, average: Double? = null, stdDev: Double? = null): this() {
        this.expName = expName
        this.runName = runName
        this.repId = repId
        this.statName = statName
        this.statCount = statCount
        this.average = average
        this.stdDev = stdDev
    }
}
