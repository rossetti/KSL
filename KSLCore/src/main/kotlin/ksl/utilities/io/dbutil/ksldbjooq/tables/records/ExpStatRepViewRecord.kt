/*
 * This file is generated by jOOQ.
 */
package ksl.utilities.io.dbutil.ksldbjooq.tables.records


import ksl.utilities.io.dbutil.ksldbjooq.tables.ExpStatRepView

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ExpStatRepViewRecord() : TableRecordImpl<ExpStatRepViewRecord>(ExpStatRepView.EXP_STAT_REP_VIEW), Record4<String?, String?, Int?, Double?> {

    open var expName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var statName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var repId: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var repValue: Double?
        set(value): Unit = set(3, value)
        get(): Double? = get(3) as Double?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<String?, String?, Int?, Double?> = super.fieldsRow() as Row4<String?, String?, Int?, Double?>
    override fun valuesRow(): Row4<String?, String?, Int?, Double?> = super.valuesRow() as Row4<String?, String?, Int?, Double?>
    override fun field1(): Field<String?> = ExpStatRepView.EXP_STAT_REP_VIEW.EXP_NAME
    override fun field2(): Field<String?> = ExpStatRepView.EXP_STAT_REP_VIEW.STAT_NAME
    override fun field3(): Field<Int?> = ExpStatRepView.EXP_STAT_REP_VIEW.REP_ID
    override fun field4(): Field<Double?> = ExpStatRepView.EXP_STAT_REP_VIEW.REP_VALUE
    override fun component1(): String? = expName
    override fun component2(): String? = statName
    override fun component3(): Int? = repId
    override fun component4(): Double? = repValue
    override fun value1(): String? = expName
    override fun value2(): String? = statName
    override fun value3(): Int? = repId
    override fun value4(): Double? = repValue

    override fun value1(value: String?): ExpStatRepViewRecord {
        this.expName = value
        return this
    }

    override fun value2(value: String?): ExpStatRepViewRecord {
        this.statName = value
        return this
    }

    override fun value3(value: Int?): ExpStatRepViewRecord {
        this.repId = value
        return this
    }

    override fun value4(value: Double?): ExpStatRepViewRecord {
        this.repValue = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Int?, value4: Double?): ExpStatRepViewRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised ExpStatRepViewRecord
     */
    constructor(expName: String? = null, statName: String? = null, repId: Int? = null, repValue: Double? = null): this() {
        this.expName = expName
        this.statName = statName
        this.repId = repId
        this.repValue = repValue
    }
}
