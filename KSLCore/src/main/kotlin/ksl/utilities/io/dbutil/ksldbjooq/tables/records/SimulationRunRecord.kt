/*
 * This file is generated by jOOQ.
 */
package ksl.utilities.io.dbutil.ksldbjooq.tables.records


import java.time.LocalDateTime

import ksl.utilities.io.dbutil.ksldbjooq.tables.SimulationRun

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SimulationRunRecord() : UpdatableRecordImpl<SimulationRunRecord>(SimulationRun.SIMULATION_RUN), Record9<Int?, Int?, String?, Int?, Int?, Int?, LocalDateTime?, LocalDateTime?, String?> {

    open var runId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var expIdFk: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var runName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var numReps: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var startRepId: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var lastRepId: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var runStartTimeStamp: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    open var runEndTimeStamp: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    open var runErrorMsg: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<Int?, Int?, String?, Int?, Int?, Int?, LocalDateTime?, LocalDateTime?, String?> = super.fieldsRow() as Row9<Int?, Int?, String?, Int?, Int?, Int?, LocalDateTime?, LocalDateTime?, String?>
    override fun valuesRow(): Row9<Int?, Int?, String?, Int?, Int?, Int?, LocalDateTime?, LocalDateTime?, String?> = super.valuesRow() as Row9<Int?, Int?, String?, Int?, Int?, Int?, LocalDateTime?, LocalDateTime?, String?>
    override fun field1(): Field<Int?> = SimulationRun.SIMULATION_RUN.RUN_ID
    override fun field2(): Field<Int?> = SimulationRun.SIMULATION_RUN.EXP_ID_FK
    override fun field3(): Field<String?> = SimulationRun.SIMULATION_RUN.RUN_NAME
    override fun field4(): Field<Int?> = SimulationRun.SIMULATION_RUN.NUM_REPS
    override fun field5(): Field<Int?> = SimulationRun.SIMULATION_RUN.START_REP_ID
    override fun field6(): Field<Int?> = SimulationRun.SIMULATION_RUN.LAST_REP_ID
    override fun field7(): Field<LocalDateTime?> = SimulationRun.SIMULATION_RUN.RUN_START_TIME_STAMP
    override fun field8(): Field<LocalDateTime?> = SimulationRun.SIMULATION_RUN.RUN_END_TIME_STAMP
    override fun field9(): Field<String?> = SimulationRun.SIMULATION_RUN.RUN_ERROR_MSG
    override fun component1(): Int? = runId
    override fun component2(): Int? = expIdFk
    override fun component3(): String? = runName
    override fun component4(): Int? = numReps
    override fun component5(): Int? = startRepId
    override fun component6(): Int? = lastRepId
    override fun component7(): LocalDateTime? = runStartTimeStamp
    override fun component8(): LocalDateTime? = runEndTimeStamp
    override fun component9(): String? = runErrorMsg
    override fun value1(): Int? = runId
    override fun value2(): Int? = expIdFk
    override fun value3(): String? = runName
    override fun value4(): Int? = numReps
    override fun value5(): Int? = startRepId
    override fun value6(): Int? = lastRepId
    override fun value7(): LocalDateTime? = runStartTimeStamp
    override fun value8(): LocalDateTime? = runEndTimeStamp
    override fun value9(): String? = runErrorMsg

    override fun value1(value: Int?): SimulationRunRecord {
        this.runId = value
        return this
    }

    override fun value2(value: Int?): SimulationRunRecord {
        this.expIdFk = value
        return this
    }

    override fun value3(value: String?): SimulationRunRecord {
        this.runName = value
        return this
    }

    override fun value4(value: Int?): SimulationRunRecord {
        this.numReps = value
        return this
    }

    override fun value5(value: Int?): SimulationRunRecord {
        this.startRepId = value
        return this
    }

    override fun value6(value: Int?): SimulationRunRecord {
        this.lastRepId = value
        return this
    }

    override fun value7(value: LocalDateTime?): SimulationRunRecord {
        this.runStartTimeStamp = value
        return this
    }

    override fun value8(value: LocalDateTime?): SimulationRunRecord {
        this.runEndTimeStamp = value
        return this
    }

    override fun value9(value: String?): SimulationRunRecord {
        this.runErrorMsg = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: Int?, value5: Int?, value6: Int?, value7: LocalDateTime?, value8: LocalDateTime?, value9: String?): SimulationRunRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised SimulationRunRecord
     */
    constructor(runId: Int? = null, expIdFk: Int? = null, runName: String? = null, numReps: Int? = null, startRepId: Int? = null, lastRepId: Int? = null, runStartTimeStamp: LocalDateTime? = null, runEndTimeStamp: LocalDateTime? = null, runErrorMsg: String? = null): this() {
        this.runId = runId
        this.expIdFk = expIdFk
        this.runName = runName
        this.numReps = numReps
        this.startRepId = startRepId
        this.lastRepId = lastRepId
        this.runStartTimeStamp = runStartTimeStamp
        this.runEndTimeStamp = runEndTimeStamp
        this.runErrorMsg = runErrorMsg
    }
}
