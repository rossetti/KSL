/*
 * This file is generated by jOOQ.
 */
package ksl.utilities.io.dbutil.ksldbjooq.tables.records


import ksl.utilities.io.dbutil.ksldbjooq.tables.RvParameter

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RvParameterRecord() : UpdatableRecordImpl<RvParameterRecord>(RvParameter.RV_PARAMETER), Record8<Int?, Int?, Int?, String?, String?, String?, String?, Double?> {

    open var rvParamId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var expIdFk: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var elementIdFk: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var className: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var dataType: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var rvName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var paramName: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var paramValue: Double?
        set(value): Unit = set(7, value)
        get(): Double? = get(7) as Double?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<Int?, Int?, Int?, String?, String?, String?, String?, Double?> = super.fieldsRow() as Row8<Int?, Int?, Int?, String?, String?, String?, String?, Double?>
    override fun valuesRow(): Row8<Int?, Int?, Int?, String?, String?, String?, String?, Double?> = super.valuesRow() as Row8<Int?, Int?, Int?, String?, String?, String?, String?, Double?>
    override fun field1(): Field<Int?> = RvParameter.RV_PARAMETER.RV_PARAM_ID
    override fun field2(): Field<Int?> = RvParameter.RV_PARAMETER.EXP_ID_FK
    override fun field3(): Field<Int?> = RvParameter.RV_PARAMETER.ELEMENT_ID_FK
    override fun field4(): Field<String?> = RvParameter.RV_PARAMETER.CLASS_NAME
    override fun field5(): Field<String?> = RvParameter.RV_PARAMETER.DATA_TYPE
    override fun field6(): Field<String?> = RvParameter.RV_PARAMETER.RV_NAME
    override fun field7(): Field<String?> = RvParameter.RV_PARAMETER.PARAM_NAME
    override fun field8(): Field<Double?> = RvParameter.RV_PARAMETER.PARAM_VALUE
    override fun component1(): Int? = rvParamId
    override fun component2(): Int? = expIdFk
    override fun component3(): Int? = elementIdFk
    override fun component4(): String? = className
    override fun component5(): String? = dataType
    override fun component6(): String? = rvName
    override fun component7(): String? = paramName
    override fun component8(): Double? = paramValue
    override fun value1(): Int? = rvParamId
    override fun value2(): Int? = expIdFk
    override fun value3(): Int? = elementIdFk
    override fun value4(): String? = className
    override fun value5(): String? = dataType
    override fun value6(): String? = rvName
    override fun value7(): String? = paramName
    override fun value8(): Double? = paramValue

    override fun value1(value: Int?): RvParameterRecord {
        this.rvParamId = value
        return this
    }

    override fun value2(value: Int?): RvParameterRecord {
        this.expIdFk = value
        return this
    }

    override fun value3(value: Int?): RvParameterRecord {
        this.elementIdFk = value
        return this
    }

    override fun value4(value: String?): RvParameterRecord {
        this.className = value
        return this
    }

    override fun value5(value: String?): RvParameterRecord {
        this.dataType = value
        return this
    }

    override fun value6(value: String?): RvParameterRecord {
        this.rvName = value
        return this
    }

    override fun value7(value: String?): RvParameterRecord {
        this.paramName = value
        return this
    }

    override fun value8(value: Double?): RvParameterRecord {
        this.paramValue = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: Int?, value4: String?, value5: String?, value6: String?, value7: String?, value8: Double?): RvParameterRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised RvParameterRecord
     */
    constructor(rvParamId: Int? = null, expIdFk: Int? = null, elementIdFk: Int? = null, className: String? = null, dataType: String? = null, rvName: String? = null, paramName: String? = null, paramValue: Double? = null): this() {
        this.rvParamId = rvParamId
        this.expIdFk = expIdFk
        this.elementIdFk = elementIdFk
        this.className = className
        this.dataType = dataType
        this.rvName = rvName
        this.paramName = paramName
        this.paramValue = paramValue
    }
}
