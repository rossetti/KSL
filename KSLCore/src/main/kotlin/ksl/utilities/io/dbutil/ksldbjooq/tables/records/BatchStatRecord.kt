/*
 * This file is generated by jOOQ.
 */
package ksl.utilities.io.dbutil.ksldbjooq.tables.records


import ksl.utilities.io.dbutil.ksldbjooq.tables.BatchStat

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BatchStatRecord() : UpdatableRecordImpl<BatchStatRecord>(BatchStat.BATCH_STAT) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var elementIdFk: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var simRunIdFk: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var repId: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var statName: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var statCount: Double?
        set(value): Unit = set(5, value)
        get(): Double? = get(5) as Double?

    open var average: Double?
        set(value): Unit = set(6, value)
        get(): Double? = get(6) as Double?

    open var stdDev: Double?
        set(value): Unit = set(7, value)
        get(): Double? = get(7) as Double?

    open var stdErr: Double?
        set(value): Unit = set(8, value)
        get(): Double? = get(8) as Double?

    open var halfWidth: Double?
        set(value): Unit = set(9, value)
        get(): Double? = get(9) as Double?

    open var confLevel: Double?
        set(value): Unit = set(10, value)
        get(): Double? = get(10) as Double?

    open var minimum: Double?
        set(value): Unit = set(11, value)
        get(): Double? = get(11) as Double?

    open var maximum: Double?
        set(value): Unit = set(12, value)
        get(): Double? = get(12) as Double?

    open var sumOfObs: Double?
        set(value): Unit = set(13, value)
        get(): Double? = get(13) as Double?

    open var devSsq: Double?
        set(value): Unit = set(14, value)
        get(): Double? = get(14) as Double?

    open var lastValue: Double?
        set(value): Unit = set(15, value)
        get(): Double? = get(15) as Double?

    open var kurtosis: Double?
        set(value): Unit = set(16, value)
        get(): Double? = get(16) as Double?

    open var skewness: Double?
        set(value): Unit = set(17, value)
        get(): Double? = get(17) as Double?

    open var lag1Cov: Double?
        set(value): Unit = set(18, value)
        get(): Double? = get(18) as Double?

    open var lag1Corr: Double?
        set(value): Unit = set(19, value)
        get(): Double? = get(19) as Double?

    open var vonNeumannLag1Stat: Double?
        set(value): Unit = set(20, value)
        get(): Double? = get(20) as Double?

    open var numMissingObs: Double?
        set(value): Unit = set(21, value)
        get(): Double? = get(21) as Double?

    open var minBatchSize: Double?
        set(value): Unit = set(22, value)
        get(): Double? = get(22) as Double?

    open var minNumBatches: Double?
        set(value): Unit = set(23, value)
        get(): Double? = get(23) as Double?

    open var maxNumBatchesMultiple: Double?
        set(value): Unit = set(24, value)
        get(): Double? = get(24) as Double?

    open var maxNumBatches: Double?
        set(value): Unit = set(25, value)
        get(): Double? = get(25) as Double?

    open var numRebatches: Double?
        set(value): Unit = set(26, value)
        get(): Double? = get(26) as Double?

    open var currentBatchSize: Double?
        set(value): Unit = set(27, value)
        get(): Double? = get(27) as Double?

    open var amtUnbatched: Double?
        set(value): Unit = set(28, value)
        get(): Double? = get(28) as Double?

    open var totalNumObs: Double?
        set(value): Unit = set(29, value)
        get(): Double? = get(29) as Double?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised BatchStatRecord
     */
    constructor(id: Int? = null, elementIdFk: Int? = null, simRunIdFk: Int? = null, repId: Int? = null, statName: String? = null, statCount: Double? = null, average: Double? = null, stdDev: Double? = null, stdErr: Double? = null, halfWidth: Double? = null, confLevel: Double? = null, minimum: Double? = null, maximum: Double? = null, sumOfObs: Double? = null, devSsq: Double? = null, lastValue: Double? = null, kurtosis: Double? = null, skewness: Double? = null, lag1Cov: Double? = null, lag1Corr: Double? = null, vonNeumannLag1Stat: Double? = null, numMissingObs: Double? = null, minBatchSize: Double? = null, minNumBatches: Double? = null, maxNumBatchesMultiple: Double? = null, maxNumBatches: Double? = null, numRebatches: Double? = null, currentBatchSize: Double? = null, amtUnbatched: Double? = null, totalNumObs: Double? = null): this() {
        this.id = id
        this.elementIdFk = elementIdFk
        this.simRunIdFk = simRunIdFk
        this.repId = repId
        this.statName = statName
        this.statCount = statCount
        this.average = average
        this.stdDev = stdDev
        this.stdErr = stdErr
        this.halfWidth = halfWidth
        this.confLevel = confLevel
        this.minimum = minimum
        this.maximum = maximum
        this.sumOfObs = sumOfObs
        this.devSsq = devSsq
        this.lastValue = lastValue
        this.kurtosis = kurtosis
        this.skewness = skewness
        this.lag1Cov = lag1Cov
        this.lag1Corr = lag1Corr
        this.vonNeumannLag1Stat = vonNeumannLag1Stat
        this.numMissingObs = numMissingObs
        this.minBatchSize = minBatchSize
        this.minNumBatches = minNumBatches
        this.maxNumBatchesMultiple = maxNumBatchesMultiple
        this.maxNumBatches = maxNumBatches
        this.numRebatches = numRebatches
        this.currentBatchSize = currentBatchSize
        this.amtUnbatched = amtUnbatched
        this.totalNumObs = totalNumObs
    }
}
